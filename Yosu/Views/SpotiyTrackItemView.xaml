<?xml version="1.0" encoding="utf-8" ?>
<Grid
    x:Class="Yosu.Views.SpotiyTrackItemView"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:berry="https://schemas.jerry08/dotnet/2023/maui"
    xmlns:cm="https://github.com/jerry08/Plugin.ContextMenuContainer"
    xmlns:components="clr-namespace:Yosu.ViewModels.Components"
    xmlns:contextMenus="clr-namespace:Yosu.Views.ContextMenus"
    xmlns:controls="clr-namespace:Microsoft.Maui.Controls"
    xmlns:converters="clr-namespace:Yosu.Converters"
    xmlns:fi="clr-namespace:Yosu.FontIcons"
    xmlns:local="clr-namespace:Yosu.Views"
    xmlns:materialDesign="clr-namespace:MaterialDesign"
    xmlns:spconverters="clr-namespace:Yosu.Converters.Spotify"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:viewmodels="clr-namespace:Yosu.ViewModels"
    xmlns:views="clr-namespace:Yosu.Views"
    xmlns:yc="clr-namespace:Yosu.Controls"
    x:Name="this"
    x:DataType="components:SpotifyDownloadViewModel">
    <Grid.Resources>
        <ResourceDictionary>
            <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />
            <converters:DownloadStatusToIsVisibileConverter x:Key="DownloadStatusToIsVisibileConverter" />
            <converters:DownloadStatusToProgressColorConverter x:Key="DownloadStatusToProgressColorConverter" />
            <converters:IntToKiloFormatConverter x:Key="IntToKiloFormatConverter" />
            <converters:MillisecondsToHumanReadableFormatConverter x:Key="MillisecondsToHumanReadableFormatConverter" />
            <converters:TimeSinceFormatConverter x:Key="TimeSinceFormatConverter" />
            <spconverters:TrackToHighestQualityArtworkUrlConverter x:Key="TrackToHighestQualityArtworkUrlConverter" />
        </ResourceDictionary>
    </Grid.Resources>
    <Border
        Margin="0"
        Padding="0"
        BackgroundColor="Transparent"
        Style="{StaticResource CollectionItem.Border}">
        <Grid
            Padding="10"
            BackgroundColor="Transparent"
            ColumnDefinitions="auto,*,auto"
            RowDefinitions="auto,auto"
            RowSpacing="0">
            <Grid.Behaviors>
                <berry:TouchBehavior
                    Command="{Binding Parent.BindingContext.OpenUrlCommand, Source={x:Reference this}}"
                    CommandParameter="{Binding BindingContext, Source={x:Reference this}}"
                    LongPressCommand="{Binding Parent.BindingContext.EnableMultiSelectWithParameterCommand, Source={x:Reference this}}"
                    LongPressCommandParameter="{Binding BindingContext, Source={x:Reference this}}"
                    NativeAnimation="True"
                    ShouldMakeChildrenInputTransparent="False" />
            </Grid.Behaviors>
            <Border
                Grid.Column="0"
                Margin="0"
                Padding="0"
                BackgroundColor="Transparent"
                HeightRequest="100"
                HorizontalOptions="FillAndExpand"
                StrokeThickness="0"
                VerticalOptions="FillAndExpand"
                WidthRequest="100">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="4" />
                </Border.StrokeShape>
                <Image
                    Aspect="AspectFill"
                    BackgroundColor="Transparent"
                    Source="{Binding Track, Converter={StaticResource TrackToHighestQualityArtworkUrlConverter}}" />
            </Border>

            <StackLayout
                Grid.Column="1"
                Margin="12,0,0,0"
                Orientation="Vertical">
                <Label
                    FontAttributes="Bold"
                    LineBreakMode="TailTruncation"
                    MaxLines="2"
                    Text="{Binding Track.Title}" />
                <Label Text="{Binding Track.Artists[0].Name}" />
                <Label Text="{Binding Track.DurationMs, Converter={StaticResource MillisecondsToHumanReadableFormatConverter}}" />
            </StackLayout>

            <!--  Only show when DownloadStatus is None, Canceled or Completed  -->
            <contextMenus:InitialContextMenu
                BindingContext="{Binding .}"
                IsVisible="{Binding CanShowInitialContextMenu}"
                Tag="{Binding Parent.BindingContext, Source={x:Reference this}}" />

            <!--  Only show while downloading (DownloadStatus is Started or Enqueued)  -->
            <contextMenus:DownloadingContextMenu
                BindingContext="{Binding .}"
                IsVisible="{Binding CanShowDownloadingContextMenu}"
                Tag="{Binding Parent.BindingContext, Source={x:Reference this}}" />

            <!--  Only show when download failed (DownloadStatus is Failed)  -->
            <contextMenus:DownloadFailedContextMenu
                BindingContext="{Binding .}"
                IsVisible="{Binding CanShowDownloadFailedContextMenu}"
                Tag="{Binding Parent.BindingContext, Source={x:Reference this}}" />

            <yc:ProgressBar
                x:Name="AnimatedProgressBar"
                Grid.Row="1"
                Grid.ColumnSpan="3"
                Margin="0,2,0,0"
                HeightRequest="3"
                IsIntermediate="{Binding IsProgressIndeterminate}"
                IsVisible="{Binding Status, Converter={StaticResource DownloadStatusToIsVisibileConverter}}"
                Progress="{Binding PercentageProgress.Fraction}"
                ProgressColor="{Binding Status, Converter={StaticResource DownloadStatusToProgressColorConverter}}"
                UseGradient="False" />
        </Grid>
    </Border>
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
            <VisualState Name="Normal" />
            <VisualState Name="Selected">
                <VisualState.Setters>
                    <Setter Property="BackgroundColor" Value="#1DB954" />
                </VisualState.Setters>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
</Grid>