<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Yosu.Views.MainPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:berry="https://schemas.jerry08/dotnet/2023/maui"
    xmlns:cm="https://github.com/jerry08/Plugin.ContextMenuContainer"
    xmlns:controls="clr-namespace:Microsoft.Maui.Controls"
    xmlns:converters="clr-namespace:Yosu.Converters"
    xmlns:fi="clr-namespace:Yosu.FontIcons"
    xmlns:local="clr-namespace:Yosu.Views"
    xmlns:materialDesign="clr-namespace:MaterialDesign"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:viewmodels="clr-namespace:Yosu.ViewModels"
    xmlns:views="clr-namespace:Yosu.Views"
    xmlns:yt="clr-namespace:YoutubeExplode.Videos;assembly=YoutubeExplode"
    x:Name="this"
    x:DataType="viewmodels:MainCollectionViewModel"
    HideSoftInputOnTapped="True">
    <!--<Page.Behaviors>
        <toolkit:StatusBarBehavior StatusBarColor="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" StatusBarStyle="{AppThemeBinding Light=DarkContent, Dark=LightContent}" />
    </Page.Behaviors>-->

    <ContentPage.Resources>
        <ResourceDictionary>
            <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />

            <DataTemplate x:Key="YoutubeVideoDataTemplate">
                <views:YoutubeVideoItemView />
            </DataTemplate>

            <DataTemplate x:Key="SoundcloudTrackDataTemplate">
                <views:SoundcloudTrackItemView />
            </DataTemplate>

            <DataTemplate x:Key="SpotifyTrackDataTemplate">
                <views:SpotiyTrackItemView />
            </DataTemplate>

            <local:MainDataTemplateSelector
                x:Key="mainDataTemplateSelector"
                SoundcloudDataTemplate="{StaticResource SoundcloudTrackDataTemplate}"
                SpotifyDataTemplate="{StaticResource SpotifyTrackDataTemplate}"
                YoutubeVideoDataTemplate="{StaticResource YoutubeVideoDataTemplate}" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <AbsoluteLayout HorizontalOptions="FillAndExpand">
        <Grid
            AbsoluteLayout.LayoutBounds="0, 0, 1, 1"
            AbsoluteLayout.LayoutFlags="All"
            RowDefinitions="auto,auto,*">
            <Grid Grid.Row="0" ColumnDefinitions="*,auto">
                <!--  CENTER TITLE  -->
                <!--<Label
                    Grid.Column="1"
                    Margin="10,0,10,0"
                    FontAttributes="Bold"
                    FontSize="20"
                    HorizontalOptions="Center"
                    LineBreakMode="TailTruncation"
                    Text="{Binding Title}"
                    VerticalOptions="Center" />-->

                <Image
                    Grid.Column="0"
                    Margin="64,0,0,0"
                    Aspect="AspectFit"
                    HeightRequest="50"
                    HorizontalOptions="Center"
                    Source="logo_name.png"
                    VerticalOptions="Center"
                    WidthRequest="50" />

                <Border
                    Grid.Column="1"
                    Margin="0,0,24,0"
                    HeightRequest="45"
                    HorizontalOptions="EndAndExpand"
                    StrokeThickness="0"
                    WidthRequest="45">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="20" />
                    </Border.StrokeShape>
                    <cm:ContextMenuContainer
                        HorizontalOptions="Center"
                        ShowOnClick="True"
                        VerticalOptions="Center">
                        <cm:ContextMenuContainer.MenuItems>
                            <cm:ContextMenuItem Command="{Binding GoToHistoryCommand}" Text="History" />
                            <cm:ContextMenuItem Command="{Binding ShowSearchOptionsCommand}" Text="Search Options" />
                            <cm:ContextMenuItem Command="{Binding GoToSettingsCommand}" Text="Settings" />
                            <cm:ContextMenuItem Command="{Binding DonateCommand}" Text="Donate" />
                        </cm:ContextMenuContainer.MenuItems>
                        <cm:ContextMenuContainer.Content>
                            <Grid>
                                <Grid.Behaviors>
                                    <berry:TouchBehavior NativeAnimation="True" />
                                </Grid.Behaviors>
                                <ImageButton
                                    Margin="4"
                                    HorizontalOptions="Center"
                                    VerticalOptions="Center">
                                    <ImageButton.Source>
                                        <FontImageSource
                                            FontFamily="Material"
                                            Glyph="{x:Static materialDesign:MaterialDesignIcons.Settings}"
                                            Size="40"
                                            Color="{AppThemeBinding Light={StaticResource Primary},
                                                                    Dark={StaticResource White}}" />
                                    </ImageButton.Source>
                                </ImageButton>
                            </Grid>

                        </cm:ContextMenuContainer.Content>
                    </cm:ContextMenuContainer>
                </Border>
            </Grid>

            <!--  SEARCH  -->
            <Grid Grid.Row="1" Margin="5,10,5,10">
                <Grid.Triggers>
                    <!--  Binding="{Binding SelectionMode, Source={RelativeSource AncestorType={x:Type views:MainCollectionViewModel}}}"  -->
                    <DataTrigger
                        Binding="{Binding BindingContext.SelectionMode, Source={RelativeSource AncestorType={x:Type views:MainPage}}}"
                        TargetType="Grid"
                        Value="Multiple">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                </Grid.Triggers>
                <Border Style="{StaticResource EntrySearchBorderStyle}">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="25" />
                    </Border.StrokeShape>
                    <Grid ColumnDefinitions="auto,*" ColumnSpacing="2">
                        <Image Style="{StaticResource EntrySearchImageStyle}" />
                        <Entry
                            HeightRequest="45"
                            Placeholder="URL or search query"
                            Style="{StaticResource EntrySearchStyle}"
                            Text="{Binding Query}">
                            <Entry.Behaviors>
                                <toolkit:EventToCommandBehavior Command="{Binding QueryChangedCommand}" EventName="Completed" />
                            </Entry.Behaviors>
                        </Entry>
                    </Grid>
                </Border>
            </Grid>

            <!--  SELECT ALL  -->
            <Grid
                Grid.Row="1"
                Margin="10"
                Padding="5,0"
                IsVisible="False">
                <Grid.Triggers>
                    <!--  Binding="{Binding SelectionMode, Source={RelativeSource AncestorType={x:Type views:MainCollectionViewModel}}}"  -->
                    <DataTrigger
                        Binding="{Binding BindingContext.SelectionMode, Source={RelativeSource AncestorType={x:Type views:MainPage}}}"
                        TargetType="Grid"
                        Value="Multiple">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                </Grid.Triggers>
                <HorizontalStackLayout
                    HeightRequest="45"
                    HorizontalOptions="Center"
                    VerticalOptions="Center">
                    <CheckBox IsChecked="{Binding IsSelectAllChecked}">
                        <CheckBox.Behaviors>
                            <toolkit:EventToCommandBehavior Command="{Binding SelectOrUnselectAllCommand}" EventName="CheckedChanged" />
                        </CheckBox.Behaviors>
                    </CheckBox>
                    <Label
                        FontAttributes="Bold"
                        FontSize="16"
                        Text="Select all"
                        VerticalTextAlignment="Center" />
                </HorizontalStackLayout>
            </Grid>

            <Grid
                Grid.Row="2"
                HorizontalOptions="CenterAndExpand"
                IsVisible="{Binding IsBusy}"
                VerticalOptions="CenterAndExpand"
                ZIndex="1000">
                <ActivityIndicator
                    HeightRequest="{OnPlatform Default=60,
                                               WinUI=100}"
                    HorizontalOptions="CenterAndExpand"
                    IsRunning="True"
                    VerticalOptions="CenterAndExpand"
                    WidthRequest="{OnPlatform Default=60,
                                              WinUI=100}">
                    <ActivityIndicator.Triggers>
                        <DataTrigger
                            Binding="{Binding IsLoading}"
                            TargetType="ActivityIndicator"
                            Value="True">
                            <Setter Property="IsRunning" Value="False" />
                            <Setter Property="BackgroundColor" Value="Transparent" />
                        </DataTrigger>
                    </ActivityIndicator.Triggers>
                </ActivityIndicator>
            </Grid>

            <RefreshView
                Grid.Row="2"
                Margin="12,0,12,0"
                Command="{Binding RefreshCommand}"
                IsRefreshing="{Binding IsRefreshing}"
                ZIndex="-1">
                <CollectionView
                    IsVisible="{Binding IsBusy, Converter={StaticResource InvertedBoolConverter}}"
                    ItemTemplate="{StaticResource mainDataTemplateSelector}"
                    ItemsSource="{Binding Entities}"
                    RemainingItemsThreshold="1"
                    RemainingItemsThresholdReachedCommand="{Binding LoadMoreCommand}"
                    SelectedItem="{Binding SelectedEntity}"
                    SelectedItems="{Binding SelectedEntities}"
                    SelectionChangedCommand="{Binding SelectionChangedCommand}"
                    SelectionMode="{Binding SelectionMode}">
                    <CollectionView.Footer>
                        <StackLayout>
                            <ActivityIndicator
                                HeightRequest="{OnPlatform Default=60,
                                                           WinUI=100}"
                                HorizontalOptions="CenterAndExpand"
                                IsRunning="{Binding IsLoading}"
                                IsVisible="{Binding IsLoading}"
                                VerticalOptions="CenterAndExpand"
                                WidthRequest="{OnPlatform Default=60,
                                                          WinUI=100}" />
                        </StackLayout>
                    </CollectionView.Footer>

                    <CollectionView.EmptyView>
                        <Grid
                            HorizontalOptions="FillAndExpand"
                            IsVisible="False"
                            VerticalOptions="FillAndExpand">
                            <Grid.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsBusy}"
                                    TargetType="Grid"
                                    Value="False">
                                    <Setter Property="IsVisible" Value="True" />
                                </DataTrigger>
                            </Grid.Triggers>
                            <Label
                                FontSize="16"
                                HorizontalOptions="Center"
                                Text="Empty"
                                VerticalOptions="Center" />
                        </Grid>
                    </CollectionView.EmptyView>
                </CollectionView>
            </RefreshView>
        </Grid>

        <Border
            x:Name="downloadContent"
            Margin="0,0,24,24"
            AbsoluteLayout.LayoutBounds="1, 1, AutoSize, AutoSize"
            AbsoluteLayout.LayoutFlags="PositionProportional"
            BackgroundColor="{AppThemeBinding Light={StaticResource Primary},
                                              Dark={StaticResource Gray900}}"
            HeightRequest="65"
            HorizontalOptions="EndAndExpand"
            IsVisible="False"
            StrokeThickness="0"
            VerticalOptions="Center"
            WidthRequest="65">
            <Border.StrokeShape>
                <RoundRectangle CornerRadius="24" />
            </Border.StrokeShape>
            <Border.Triggers>
                <!--  Binding="{Binding SelectionMode, Source={RelativeSource AncestorType={x:Type views:MainCollectionViewModel}}}"  -->
                <!--<DataTrigger
                    Binding="{Binding BindingContext.SelectionMode, Source={RelativeSource AncestorType={x:Type views:MainPage}}}"
                    TargetType="Border"
                    Value="Multiple">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>-->
            </Border.Triggers>
            <Grid>
                <Grid.Behaviors>
                    <berry:TouchBehavior Command="{Binding BindingContext.DownloadSelectedCommand, Source={x:Reference this}}" NativeAnimation="True" />
                </Grid.Behaviors>
                <Image
                    Margin="5"
                    BackgroundColor="Transparent"
                    HeightRequest="28"
                    HorizontalOptions="Center"
                    VerticalOptions="Center"
                    WidthRequest="28">
                    <Image.Source>
                        <FontImageSource
                            FontFamily="FaSolid"
                            Glyph="{x:Static fi:FaSolid.ArrowDown}"
                            Size="28"
                            Color="White" />
                    </Image.Source>
                </Image>
            </Grid>
        </Border>
    </AbsoluteLayout>
</ContentPage>